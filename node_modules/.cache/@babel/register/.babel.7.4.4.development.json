{
  "{\"sourceRoot\":\"/home/Ciarmin/dev/simple-editor\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/Ciarmin/dev/simple-editor\",\"filename\":\"/home/Ciarmin/dev/simple-editor/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/Ciarmin/dev/simple-editor\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/Ciarmin/dev/simple-editor",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/Ciarmin/dev/simple-editor",
      "filename": "/home/Ciarmin/dev/simple-editor/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/Ciarmin/dev/simple-editor",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/Ciarmin/dev/simple-editor/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/Ciarmin/dev/simple-editor/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/Ciarmin/dev/simple-editor",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpBabel = _interopRequireDefault(require(\"gulp-babel\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpNotify = _interopRequireDefault(require(\"gulp-notify\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _webpackConfig = _interopRequireDefault(require(\"./webpack.config.js\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\n\nvar errorHandler = function errorHandler(err) {\n  _gulpNotify[\"default\"].onError({\n    title: \"Gulp error in \".concat(err.plugin),\n    message: err.toString()\n  })(err);\n};\n\n_gulp[\"default\"].task(\"assets\", function () {\n  return _gulp[\"default\"].src(\"./src/assets/**/*\").pipe(_gulp[\"default\"].dest(\"./dist/assets/\"));\n});\n\n_gulp[\"default\"].task(\"html\", function () {\n  return _gulp[\"default\"].src(\"./src/content/**/*.html\").pipe((0, _gulpPlumber[\"default\"])(errorHandler)).pipe(_gulp[\"default\"].dest(\"./dist/\"));\n});\n\n_gulp[\"default\"].task(\"js\", function () {\n  return _gulp[\"default\"].src(\"src/js/main.js\").pipe((0, _gulpPlumber[\"default\"])(errorHandler)).pipe((0, _webpackStream[\"default\"])(_webpackConfig[\"default\"]), _webpack[\"default\"]).pipe((0, _gulpUglify[\"default\"])()).on('error', errorHandler).pipe(_gulp[\"default\"].dest(\"dist/js\"));\n});\n\n_gulp[\"default\"].task(\"sass\", function () {\n  return _gulp[\"default\"].src(\"./src/scss/main.scss\").pipe((0, _gulpPlumber[\"default\"])({\n    errorHandler: function errorHandler(err) {\n      _gulpNotify[\"default\"].onError({\n        title: \"Gulp error in \".concat(err.plugin),\n        message: err.toString()\n      })(err);\n    }\n  })).pipe(_gulpSourcemaps[\"default\"].init()).pipe((0, _gulpSass[\"default\"])()).on(\"error\", _gulpSass[\"default\"].logError).pipe((0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])({\n    grid: true,\n    browsers: [\"> 5%\", \"last 4 versions\"]\n  })])).pipe(_gulpSourcemaps[\"default\"].write(\".\")).pipe(_gulp[\"default\"].dest(\"./dist/css\")).pipe(_browserSync[\"default\"].stream());\n});\n\n_gulp[\"default\"].task(\"serve\", _gulp[\"default\"].series(\"sass\", \"html\", \"js\", \"assets\", function () {\n  _browserSync[\"default\"].init({\n    server: \"./dist\",\n    open: true // set to false to disable browser autostart\n\n  });\n\n  _gulp[\"default\"].watch(\"src/scss/**/*\", _gulp[\"default\"].series(\"sass\"));\n\n  _gulp[\"default\"].watch(\"src/content/**/*.html\", _gulp[\"default\"].series(\"html\"));\n\n  _gulp[\"default\"].watch(\"src/js/*.js\", _gulp[\"default\"].series(\"js\"));\n\n  _gulp[\"default\"].watch(\"src/assets/**/*\", _gulp[\"default\"].series(\"assets\"));\n\n  _gulp[\"default\"].watch(\"dist/**/*\").on(\"change\", _browserSync[\"default\"].reload);\n}));\n\n_gulp[\"default\"].task(\"build\", _gulp[\"default\"].series(\"sass\", \"html\", \"js\", \"assets\"));\n\n_gulp[\"default\"].task(\"default\", _gulp[\"default\"].series(\"serve\"));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJlcnJvckhhbmRsZXIiLCJlcnIiLCJub3RpZnkiLCJvbkVycm9yIiwidGl0bGUiLCJwbHVnaW4iLCJtZXNzYWdlIiwidG9TdHJpbmciLCJndWxwIiwidGFzayIsInNyYyIsInBpcGUiLCJkZXN0Iiwid2VicGFja0NvbmZpZyIsIndlYnBhY2siLCJvbiIsInNvdXJjZW1hcHMiLCJpbml0IiwibG9nRXJyb3IiLCJncmlkIiwiYnJvd3NlcnMiLCJ3cml0ZSIsImJyb3dzZXJTeW5jIiwic3RyZWFtIiwic2VyaWVzIiwic2VydmVyIiwib3BlbiIsIndhdGNoIiwicmVsb2FkIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBQSxxQkFBS0MsUUFBTCxHQUFnQkMsT0FBTyxDQUFDLFdBQUQsQ0FBdkI7O0FBRUEsSUFBTUMsWUFBWSxHQUFHLFNBQWZBLFlBQWUsQ0FBQ0MsR0FBRCxFQUFTO0FBQzFCQyx5QkFBT0MsT0FBUCxDQUFlO0FBQ2JDLElBQUFBLEtBQUssMEJBQW1CSCxHQUFHLENBQUNJLE1BQXZCLENBRFE7QUFFYkMsSUFBQUEsT0FBTyxFQUFFTCxHQUFHLENBQUNNLFFBQUo7QUFGSSxHQUFmLEVBR0dOLEdBSEg7QUFJSCxDQUxEOztBQU9BTyxpQkFBS0MsSUFBTCxDQUFVLFFBQVYsRUFBb0IsWUFBVztBQUM3QixTQUFPRCxpQkFBS0UsR0FBTCxDQUFTLG1CQUFULEVBQThCQyxJQUE5QixDQUFtQ0gsaUJBQUtJLElBQUwsQ0FBVSxnQkFBVixDQUFuQyxDQUFQO0FBQ0QsQ0FGRDs7QUFJQUosaUJBQUtDLElBQUwsQ0FBVSxNQUFWLEVBQWtCLFlBQVc7QUFDM0IsU0FBT0QsaUJBQ0pFLEdBREksQ0FDQSx5QkFEQSxFQUVK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ZWRpdG9yIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBndWxwIGZyb20gXCJndWxwXCI7XG5pbXBvcnQgYmFiZWwgZnJvbSBcImd1bHAtYmFiZWxcIjtcbmltcG9ydCB1Z2xpZnkgZnJvbSBcImd1bHAtdWdsaWZ5XCI7XG5pbXBvcnQgYnJvd3NlclN5bmMgZnJvbSBcImJyb3dzZXItc3luY1wiO1xuaW1wb3J0IHNhc3MgZnJvbSBcImd1bHAtc2Fzc1wiO1xuaW1wb3J0IGF1dG9wcmVmaXhlciBmcm9tIFwiYXV0b3ByZWZpeGVyXCI7XG5pbXBvcnQgcG9zdGNzcyBmcm9tIFwiZ3VscC1wb3N0Y3NzXCI7XG5pbXBvcnQgc291cmNlbWFwcyBmcm9tIFwiZ3VscC1zb3VyY2VtYXBzXCI7XG5pbXBvcnQgbm90aWZ5IGZyb20gXCJndWxwLW5vdGlmeVwiO1xuaW1wb3J0IHBsdW1iZXIgZnJvbSBcImd1bHAtcGx1bWJlclwiO1xuaW1wb3J0IHdlYnBhY2sgZnJvbSAnd2VicGFjayc7XG5pbXBvcnQgd2VicGFja0NvbmZpZyBmcm9tICcuL3dlYnBhY2suY29uZmlnLmpzJztcbmltcG9ydCB3ZWJwYWNrU3RyZWFtIGZyb20gJ3dlYnBhY2stc3RyZWFtJztcblxuc2Fzcy5jb21waWxlciA9IHJlcXVpcmUoXCJub2RlLXNhc3NcIik7XG5cbmNvbnN0IGVycm9ySGFuZGxlciA9IChlcnIpID0+IHtcbiAgICBub3RpZnkub25FcnJvcih7XG4gICAgICB0aXRsZTogYEd1bHAgZXJyb3IgaW4gJHtlcnIucGx1Z2lufWAsXG4gICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxuICAgIH0pKGVycik7XG59XG5cbmd1bHAudGFzayhcImFzc2V0c1wiLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGd1bHAuc3JjKFwiLi9zcmMvYXNzZXRzLyoqLypcIikucGlwZShndWxwLmRlc3QoXCIuL2Rpc3QvYXNzZXRzL1wiKSk7XG59KTtcblxuZ3VscC50YXNrKFwiaHRtbFwiLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGd1bHBcbiAgICAuc3JjKFwiLi9zcmMvY29udGVudC8qKi8qLmh0bWxcIilcbiAgICAucGlwZShcbiAgICAgIHBsdW1iZXIoZXJyb3JIYW5kbGVyKVxuICAgIClcbiAgICAucGlwZShndWxwLmRlc3QoXCIuL2Rpc3QvXCIpKTtcbn0pO1xuXG5ndWxwLnRhc2soXCJqc1wiLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGd1bHBcbiAgICAuc3JjKFwic3JjL2pzL21haW4uanNcIilcbiAgICAucGlwZShcbiAgICAgIHBsdW1iZXIoZXJyb3JIYW5kbGVyKVxuICAgIClcbiAgICAucGlwZSh3ZWJwYWNrU3RyZWFtKHdlYnBhY2tDb25maWcpLCB3ZWJwYWNrKVxuICAgIC5waXBlKHVnbGlmeSgpKVxuICAgIC5vbignZXJyb3InLCBlcnJvckhhbmRsZXIpXG4gICAgLnBpcGUoZ3VscC5kZXN0KFwiZGlzdC9qc1wiKSk7XG59KTtcblxuZ3VscC50YXNrKFwic2Fzc1wiLCAoKSA9PiB7XG4gIHJldHVybiBndWxwXG4gICAgLnNyYyhcIi4vc3JjL3Njc3MvbWFpbi5zY3NzXCIpXG4gICAgLnBpcGUoXG4gICAgICBwbHVtYmVyKHtcbiAgICAgICAgZXJyb3JIYW5kbGVyOiBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBub3RpZnkub25FcnJvcih7XG4gICAgICAgICAgICB0aXRsZTogYEd1bHAgZXJyb3IgaW4gJHtlcnIucGx1Z2lufWAsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnIudG9TdHJpbmcoKVxuICAgICAgICAgIH0pKGVycik7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgKVxuICAgIC5waXBlKHNvdXJjZW1hcHMuaW5pdCgpKVxuICAgIC5waXBlKHNhc3MoKSlcbiAgICAub24oXCJlcnJvclwiLCBzYXNzLmxvZ0Vycm9yKVxuICAgIC5waXBlKFxuICAgICAgcG9zdGNzcyhbXG4gICAgICAgIGF1dG9wcmVmaXhlcih7IGdyaWQ6IHRydWUsIGJyb3dzZXJzOiBbXCI+IDUlXCIsIFwibGFzdCA0IHZlcnNpb25zXCJdIH0pXG4gICAgICBdKVxuICAgIClcbiAgICAucGlwZShzb3VyY2VtYXBzLndyaXRlKFwiLlwiKSlcbiAgICAucGlwZShndWxwLmRlc3QoXCIuL2Rpc3QvY3NzXCIpKVxuICAgIC5waXBlKGJyb3dzZXJTeW5jLnN0cmVhbSgpKTtcbn0pO1xuXG5ndWxwLnRhc2soXG4gIFwic2VydmVcIixcbiAgZ3VscC5zZXJpZXMoXCJzYXNzXCIsIFwiaHRtbFwiLCBcImpzXCIsIFwiYXNzZXRzXCIsIGZ1bmN0aW9uKCkge1xuICAgIGJyb3dzZXJTeW5jLmluaXQoe1xuICAgICAgc2VydmVyOiBcIi4vZGlzdFwiLFxuICAgICAgb3BlbjogdHJ1ZSAvLyBzZXQgdG8gZmFsc2UgdG8gZGlzYWJsZSBicm93c2VyIGF1dG9zdGFydFxuICAgIH0pO1xuICAgIGd1bHAud2F0Y2goXCJzcmMvc2Nzcy8qKi8qXCIsIGd1bHAuc2VyaWVzKFwic2Fzc1wiKSk7XG4gICAgZ3VscC53YXRjaChcInNyYy9jb250ZW50LyoqLyouaHRtbFwiLCBndWxwLnNlcmllcyhcImh0bWxcIikpO1xuICAgIGd1bHAud2F0Y2goXCJzcmMvanMvKi5qc1wiLCBndWxwLnNlcmllcyhcImpzXCIpKTtcbiAgICBndWxwLndhdGNoKFwic3JjL2Fzc2V0cy8qKi8qXCIsIGd1bHAuc2VyaWVzKFwiYXNzZXRzXCIpKTtcbiAgICBndWxwLndhdGNoKFwiZGlzdC8qKi8qXCIpLm9uKFwiY2hhbmdlXCIsIGJyb3dzZXJTeW5jLnJlbG9hZCk7XG4gIH0pXG4pO1xuXG5ndWxwLnRhc2soXCJidWlsZFwiLCBndWxwLnNlcmllcyhcInNhc3NcIiwgXCJodG1sXCIsIFwianNcIiwgXCJhc3NldHNcIikpO1xuZ3VscC50YXNrKFwiZGVmYXVsdFwiLCBndWxwLnNlcmllcyhcInNlcnZlXCIpKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "errorHandler",
        "err",
        "notify",
        "onError",
        "title",
        "plugin",
        "message",
        "toString",
        "gulp",
        "task",
        "src",
        "pipe",
        "dest",
        "webpackConfig",
        "webpack",
        "on",
        "sourcemaps",
        "init",
        "logError",
        "grid",
        "browsers",
        "write",
        "browserSync",
        "stream",
        "series",
        "server",
        "open",
        "watch",
        "reload"
      ],
      "mappings": "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",
      "sourceRoot": "/home/Ciarmin/dev/simple-editor",
      "sourcesContent": [
        "\"use strict\";\n\nimport gulp from \"gulp\";\nimport babel from \"gulp-babel\";\nimport uglify from \"gulp-uglify\";\nimport browserSync from \"browser-sync\";\nimport sass from \"gulp-sass\";\nimport autoprefixer from \"autoprefixer\";\nimport postcss from \"gulp-postcss\";\nimport sourcemaps from \"gulp-sourcemaps\";\nimport notify from \"gulp-notify\";\nimport plumber from \"gulp-plumber\";\nimport webpack from 'webpack';\nimport webpackConfig from './webpack.config.js';\nimport webpackStream from 'webpack-stream';\n\nsass.compiler = require(\"node-sass\");\n\nconst errorHandler = (err) => {\n    notify.onError({\n      title: `Gulp error in ${err.plugin}`,\n      message: err.toString()\n    })(err);\n}\n\ngulp.task(\"assets\", function() {\n  return gulp.src(\"./src/assets/**/*\").pipe(gulp.dest(\"./dist/assets/\"));\n});\n\ngulp.task(\"html\", function() {\n  return gulp\n    .src(\"./src/content/**/*.html\")\n    .pipe(\n      plumber(errorHandler)\n    )\n    .pipe(gulp.dest(\"./dist/\"));\n});\n\ngulp.task(\"js\", function() {\n  return gulp\n    .src(\"src/js/main.js\")\n    .pipe(\n      plumber(errorHandler)\n    )\n    .pipe(webpackStream(webpackConfig), webpack)\n    .pipe(uglify())\n    .on('error', errorHandler)\n    .pipe(gulp.dest(\"dist/js\"));\n});\n\ngulp.task(\"sass\", () => {\n  return gulp\n    .src(\"./src/scss/main.scss\")\n    .pipe(\n      plumber({\n        errorHandler: function(err) {\n          notify.onError({\n            title: `Gulp error in ${err.plugin}`,\n            message: err.toString()\n          })(err);\n        }\n      })\n    )\n    .pipe(sourcemaps.init())\n    .pipe(sass())\n    .on(\"error\", sass.logError)\n    .pipe(\n      postcss([\n        autoprefixer({ grid: true, browsers: [\"> 5%\", \"last 4 versions\"] })\n      ])\n    )\n    .pipe(sourcemaps.write(\".\"))\n    .pipe(gulp.dest(\"./dist/css\"))\n    .pipe(browserSync.stream());\n});\n\ngulp.task(\n  \"serve\",\n  gulp.series(\"sass\", \"html\", \"js\", \"assets\", function() {\n    browserSync.init({\n      server: \"./dist\",\n      open: true // set to false to disable browser autostart\n    });\n    gulp.watch(\"src/scss/**/*\", gulp.series(\"sass\"));\n    gulp.watch(\"src/content/**/*.html\", gulp.series(\"html\"));\n    gulp.watch(\"src/js/*.js\", gulp.series(\"js\"));\n    gulp.watch(\"src/assets/**/*\", gulp.series(\"assets\"));\n    gulp.watch(\"dist/**/*\").on(\"change\", browserSync.reload);\n  })\n);\n\ngulp.task(\"build\", gulp.series(\"sass\", \"html\", \"js\", \"assets\"));\ngulp.task(\"default\", gulp.series(\"serve\"));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562262849000
  },
  "{\"sourceRoot\":\"/home/Ciarmin/dev/simple-editor\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/Ciarmin/dev/simple-editor\",\"filename\":\"/home/Ciarmin/dev/simple-editor/webpack.config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/Ciarmin/dev/simple-editor\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/Ciarmin/dev/simple-editor",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/Ciarmin/dev/simple-editor",
      "filename": "/home/Ciarmin/dev/simple-editor/webpack.config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/Ciarmin/dev/simple-editor",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/Ciarmin/dev/simple-editor/webpack.config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/Ciarmin/dev/simple-editor/webpack.config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/Ciarmin/dev/simple-editor",
        "sourceFileName": "webpack.config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  output: {\n    filename: 'main.js'\n  },\n  mode: 'production',\n  module: {\n    rules: [{\n      test: /\\.(js|jsx)$/,\n      exclude: /(node_modules)/,\n      loader: 'babel-loader',\n      query: {\n        presets: [['@babel/preset-env', {\n          modules: false\n        }]]\n      }\n    }]\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2suY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJvdXRwdXQiLCJmaWxlbmFtZSIsIm1vZGUiLCJydWxlcyIsInRlc3QiLCJleGNsdWRlIiwibG9hZGVyIiwicXVlcnkiLCJwcmVzZXRzIiwibW9kdWxlcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLE1BQU0sRUFBRTtBQUNOQyxJQUFBQSxRQUFRLEVBQUU7QUFESixHQURPO0FBSWZDLEVBQUFBLElBQUksRUFBRSxZQUpTO0FBS2ZKLEVBQUFBLE1BQU0sRUFBRTtBQUNOSyxJQUFBQSxLQUFLLEVBQUUsQ0FDTDtBQUNFQyxNQUFBQSxJQUFJLEVBQUUsYUFEUjtBQUVFQyxNQUFBQSxPQUFPLEVBQUUsZ0JBRlg7QUFHRUMsTUFBQUEsTUFBTSxFQUFFLGNBSFY7QUFJRUMsTUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFFBQUFBLE9BQU8sRUFBRSxDQUNQLENBQUMsbUJBQUQsRUFBc0I7QUFBRUMsVUFBQUEsT0FBTyxFQUFFO0FBQVgsU0FBdEIsQ0FETztBQURKO0FBSlQsS0FESztBQUREO0FBTE8sQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvQ2lhcm1pbi9kZXYvc2ltcGxlLWVkaXRvciIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBvdXRwdXQ6IHtcbiAgICBmaWxlbmFtZTogJ21haW4uanMnLFxuICB9LFxuICBtb2RlOiAncHJvZHVjdGlvbicsXG4gIG1vZHVsZToge1xuICAgIHJ1bGVzOiBbXG4gICAgICB7XG4gICAgICAgIHRlc3Q6IC9cXC4oanN8anN4KSQvLFxuICAgICAgICBleGNsdWRlOiAvKG5vZGVfbW9kdWxlcykvLFxuICAgICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgICBxdWVyeToge1xuICAgICAgICAgIHByZXNldHM6IFtcbiAgICAgICAgICAgIFsnQGJhYmVsL3ByZXNldC1lbnYnLCB7IG1vZHVsZXM6IGZhbHNlIH1dLFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "webpack.config.js"
      ],
      "names": [
        "module",
        "exports",
        "output",
        "filename",
        "mode",
        "rules",
        "test",
        "exclude",
        "loader",
        "query",
        "presets",
        "modules"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GADO;AAIfC,EAAAA,IAAI,EAAE,YAJS;AAKfJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,IAAI,EAAE,aADR;AAEEC,MAAAA,OAAO,EAAE,gBAFX;AAGEC,MAAAA,MAAM,EAAE,cAHV;AAIEC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,CACP,CAAC,mBAAD,EAAsB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAtB,CADO;AADJ;AAJT,KADK;AADD;AALO,CAAjB",
      "sourceRoot": "/home/Ciarmin/dev/simple-editor",
      "sourcesContent": [
        "module.exports = {\n  output: {\n    filename: 'main.js',\n  },\n  mode: 'production',\n  module: {\n    rules: [\n      {\n        test: /\\.(js|jsx)$/,\n        exclude: /(node_modules)/,\n        loader: 'babel-loader',\n        query: {\n          presets: [\n            ['@babel/preset-env', { modules: false }],\n          ],\n        },\n      },\n    ],\n  },\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1562262849002
  }
}